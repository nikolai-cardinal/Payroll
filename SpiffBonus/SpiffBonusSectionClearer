/**
 * Cardinal Payroll System - Spiff/Bonus Section Clearer
 * Contains functions for clearing the Spiff data section in technician sheets.
 */

/**
* Clears the data rows where Type column (J) contains 'Spiff'.
* @param {Sheet} sheet - The technician sheet to clear.
* @param {Array} newData - The new spiff data rows to replace existing data with.
* @return {number} The number of rows cleared
*/
function clearSpiffDataSection(sheet, newData) {
  if (!sheet) return 0;
  try {
    var customerHeaderRow = findSpiffCustomerDataSection(sheet);
    if (customerHeaderRow <= 0) {
      console.log("Clear Spiff Data: Customer section not found in " + sheet.getName());
      return 0;
    }
    
    var dataStartRow = customerHeaderRow + 1;
    var nextSectionRow = findNextSectionStart(sheet, customerHeaderRow + 1);
    
    if (nextSectionRow <= 0) {
      nextSectionRow = sheet.getLastRow() + 1;
      console.log("No next section found, using last row + 1 (" + nextSectionRow + ") as boundary");
    }

    var rowsAvailable = nextSectionRow - dataStartRow;
    if (rowsAvailable <= 0) {
      console.log("No data rows available to clear in " + sheet.getName());
      return 0;
    }
    
    // Clear ALL rows in the data section, columns E-J (5-10)
    var clearRange = sheet.getRange(dataStartRow, 5, rowsAvailable, 6); // Columns E-J (5-10)
    clearRange.clearContent();
    
    console.log("Cleared entire data section (" + rowsAvailable + " rows) in " + sheet.getName());
    return rowsAvailable;
  } catch (e) {
    console.error("Error clearing spiff data section: " + e);
    return 0;
  }
}

/**
 * Helper function to get existing spiff data without clearing it.
 * @param {Sheet} sheet - The technician sheet to read from.
 * @return {Array} The existing spiff data rows (excluding the Total row).
 */
function getExistingSpiffData(sheet) {
  if (!sheet) return [];
  try {
    var spiffSectionRow = findSpiffCustomerDataSection(sheet);
    if (spiffSectionRow <= 0) return [];
    
    var spiffHeaderRow = spiffSectionRow;
    var spiffDataStartRow = spiffHeaderRow + 1;
    var nextSectionRow = findNextSectionStart(sheet, spiffHeaderRow + 1);
    
    if (nextSectionRow <= 0) {
      nextSectionRow = sheet.getLastRow() + 1;
    }
    
    var rowsToRead = 0;
    if (spiffDataStartRow < nextSectionRow - 1) { // Exclude the Total row
      rowsToRead = nextSectionRow - spiffDataStartRow - 1;
    } else {
      return [];
    }
    
    if (rowsToRead <= 0) return [];
    
    var numColsToRead = 10; // Read columns A-J
    var dataRange = sheet.getRange(spiffDataStartRow, 1, rowsToRead, numColsToRead);
    var data = dataRange.getValues();
    
    // Filter out Total row and empty rows
    var filteredData = data.filter(function(row) {
      return row[0] && row[0].toString().trim().toLowerCase() !== "total";
    });
    
    console.log("Read " + filteredData.length + " existing spiff data rows from " + sheet.getName());
    return filteredData;
  } catch (e) {
    console.error("Error reading existing spiff data for " + sheet.getName() + ": " + e);
    return [];
  }
} 